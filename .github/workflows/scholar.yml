name: Scholar Publications Sync
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'  # Monthly update

jobs:
  update_publications:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Crucial for push access

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Essential for write permissions
          persist-credentials: false

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install scholarly pyyaml

      - name: Fetch or create publications data
        env:
          SCHOLAR_ID: ${{ secrets.SCHOLAR_ID }}
        run: |
          # Create manual backup first
          cat > _data/scholar.yml << 'EOF'
          publications:
            - title: "Global stillbirths 1990-2021"
              authors: "GBD Collaborators (incl. Shuja KH)"
              year: "2024"
              venue: "The Lancet"
              url: "https://scholar.google.com/citations?view_op=view_citation&citation_for_view=ZfCrk2IAAAAJ:u-x6o8ySG0sC"
              doi: "10.1016/S0140-6736(24)01925-1"
          EOF

          # Try automated fetch
          python -c "
          from scholarly import scholarly
          import yaml
          try:
              author = scholarly.search_author_id('$SCHOLAR_ID')
              scholarly.fill(author, sections=['publications'])
              pubs = author['publications'][:10]
              with open('_data/scholar.yml', 'w') as f:
                  yaml.dump({'publications': [
                      {
                          'title': p['bib'].get('title'),
                          'authors': p['bib'].get('author'),
                          'year': p['bib'].get('year'),
                          'venue': p['bib'].get('journal', ''),
                          'url': p.get('pub_url', ''),
                          'doi': next((link.split('doi.org/')[1] for link in p['bib'].get('url', '').split() if 'doi.org/' in link), '')
                      } for p in pubs if 'bib' in p
                  ]}, f)
          except Exception as e:
              print(f'Automated fetch failed, using manual data: {e}')
          "

      - name: Commit and push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git add _data/scholar.yml
          git commit -m "Update publications [skip ci]" || exit 0
          git push origin HEAD:main
